
Oppgaev_6.3_Scaled.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000692  00000726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800102  00800102  00000728  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000758  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000794  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006e9  00000000  00000000  000007c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000636  00000000  00000000  00000ead  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000212  00000000  00000000  000014e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  000016f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fd  00000000  00000000  00001798  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  00001b95  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001c94  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e9       	ldi	r30, 0x92	; 146
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 30       	cpi	r26, 0x0A	; 10
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 76 00 	call	0xec	; 0xec <main>
  9e:	0c 94 47 03 	jmp	0x68e	; 0x68e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z13PWM_init_8bitv>:
int counterDir = 1;
double lightConv = 0.0;

void PWM_init_8bit()	// initializing PWM 8-bit
{
	DDRD = (1 << PD6);	// set PD6 as output
  a6:	80 e4       	ldi	r24, 0x40	; 64
  a8:	8a b9       	out	0x0a, r24	; 10
	
	TCCR1A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);	// set FAST 8-bit PWM, with clear OC0A on compare
  aa:	83 e8       	ldi	r24, 0x83	; 131
  ac:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TIMSK0 = (1 << TOIE0);	// set interrupt register to overflow interrupt
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	sei();	// enables external interrupt
  b6:	78 94       	sei
	
	TCCR0B = (1 << CS02) | (1 << CS00);	// set prescaling register to clk/1024
  b8:	85 e0       	ldi	r24, 0x05	; 5
  ba:	85 bd       	out	0x25, r24	; 37
	OCR0A = (dutyCycle/100.0)*255.0;	// set clear on compare value
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	48 ec       	ldi	r20, 0xC8	; 200
  c2:	52 e4       	ldi	r21, 0x42	; 66
  c4:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <dutyCycle>
  c8:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <dutyCycle+0x1>
  cc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <dutyCycle+0x2>
  d0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <dutyCycle+0x3>
  d4:	0e 94 bf 01 	call	0x37e	; 0x37e <__divsf3>
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	4f e7       	ldi	r20, 0x7F	; 127
  de:	53 e4       	ldi	r21, 0x43	; 67
  e0:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__mulsf3>
  e4:	0e 94 31 02 	call	0x462	; 0x462 <__fixunssfsi>
  e8:	67 bd       	out	0x27, r22	; 39
  ea:	08 95       	ret

000000ec <main>:
}

int main(void)
{
	PWM_init_8bit();
  ec:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z13PWM_init_8bitv>
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <main+0x4>

000000f2 <__vector_16>:
	{
	}
}

ISR(TIMER0_OVF_vect)
{	
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	cf 92       	push	r12
  fe:	df 92       	push	r13
 100:	ef 92       	push	r14
 102:	ff 92       	push	r15
 104:	2f 93       	push	r18
 106:	3f 93       	push	r19
 108:	4f 93       	push	r20
 10a:	5f 93       	push	r21
 10c:	6f 93       	push	r22
 10e:	7f 93       	push	r23
 110:	8f 93       	push	r24
 112:	9f 93       	push	r25
 114:	af 93       	push	r26
 116:	bf 93       	push	r27
 118:	ef 93       	push	r30
 11a:	ff 93       	push	r31
	if (dutyCycle < 0.0)	// Prevents dutycycle from decreasing below 100 (causing OCR0A error)
 11c:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <dutyCycle>
 120:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <dutyCycle+0x1>
 124:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <dutyCycle+0x2>
 128:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <dutyCycle+0x3>
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	a9 01       	movw	r20, r18
 132:	c7 01       	movw	r24, r14
 134:	b6 01       	movw	r22, r12
 136:	0e 94 ba 01 	call	0x374	; 0x374 <__cmpsf2>
 13a:	88 23       	and	r24, r24
 13c:	4c f4       	brge	.+18     	; 0x150 <__vector_16+0x5e>
	{
		dutyCycle = 0.0;
 13e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <dutyCycle>
 142:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <dutyCycle+0x1>
 146:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <dutyCycle+0x2>
 14a:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <dutyCycle+0x3>
 14e:	16 c0       	rjmp	.+44     	; 0x17c <__vector_16+0x8a>
	}
	if (dutyCycle > 100.0)// Prevents dutycycle from increasing above 100 (causing OCR0A error)
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	48 ec       	ldi	r20, 0xC8	; 200
 156:	52 e4       	ldi	r21, 0x42	; 66
 158:	c7 01       	movw	r24, r14
 15a:	b6 01       	movw	r22, r12
 15c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__gesf2>
 160:	18 16       	cp	r1, r24
 162:	64 f4       	brge	.+24     	; 0x17c <__vector_16+0x8a>
	{
		dutyCycle = 100.0;
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	a8 ec       	ldi	r26, 0xC8	; 200
 16a:	b2 e4       	ldi	r27, 0x42	; 66
 16c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <dutyCycle>
 170:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <dutyCycle+0x1>
 174:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <dutyCycle+0x2>
 178:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <dutyCycle+0x3>
	}

	lightConv = (pow(dutyCycle,2)) / (100);	// converts calculated measured light value to perceived light value
 17c:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <dutyCycle>
 180:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <dutyCycle+0x1>
 184:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <dutyCycle+0x2>
 188:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <dutyCycle+0x3>
 18c:	9b 01       	movw	r18, r22
 18e:	ac 01       	movw	r20, r24
 190:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__mulsf3>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	48 ec       	ldi	r20, 0xC8	; 200
 19a:	52 e4       	ldi	r21, 0x42	; 66
 19c:	0e 94 bf 01 	call	0x37e	; 0x37e <__divsf3>
 1a0:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__data_end>
 1a4:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <__data_end+0x1>
 1a8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end+0x2>
 1ac:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x3>
	
	OCR0A = (lightConv/100.0)*255.0;	// updates OCR0A value at every interrupt
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	48 ec       	ldi	r20, 0xC8	; 200
 1b6:	52 e4       	ldi	r21, 0x42	; 66
 1b8:	0e 94 bf 01 	call	0x37e	; 0x37e <__divsf3>
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	4f e7       	ldi	r20, 0x7F	; 127
 1c2:	53 e4       	ldi	r21, 0x43	; 67
 1c4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__mulsf3>
 1c8:	0e 94 31 02 	call	0x462	; 0x462 <__fixunssfsi>
 1cc:	67 bd       	out	0x27, r22	; 39
	
	if (dutyCycle >= 100.0)	// flag for dimming down
 1ce:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <dutyCycle>
 1d2:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <dutyCycle+0x1>
 1d6:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <dutyCycle+0x2>
 1da:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <dutyCycle+0x3>
 1de:	20 e0       	ldi	r18, 0x00	; 0
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	48 ec       	ldi	r20, 0xC8	; 200
 1e4:	52 e4       	ldi	r21, 0x42	; 66
 1e6:	c7 01       	movw	r24, r14
 1e8:	b6 01       	movw	r22, r12
 1ea:	0e 94 d5 02 	call	0x5aa	; 0x5aa <__gesf2>
 1ee:	88 23       	and	r24, r24
 1f0:	2c f0       	brlt	.+10     	; 0x1fc <__vector_16+0x10a>
	{
		counterDir = 0;
 1f2:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
 1f6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 1fa:	2a c0       	rjmp	.+84     	; 0x250 <__vector_16+0x15e>
	}
	else if (dutyCycle <= 0.0)	// flag for dimming up
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	a9 01       	movw	r20, r18
 202:	c7 01       	movw	r24, r14
 204:	b6 01       	movw	r22, r12
 206:	0e 94 ba 01 	call	0x374	; 0x374 <__cmpsf2>
 20a:	18 16       	cp	r1, r24
 20c:	3c f0       	brlt	.+14     	; 0x21c <__vector_16+0x12a>
	{
		counterDir = 1.;
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 216:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 21a:	07 c0       	rjmp	.+14     	; 0x22a <__vector_16+0x138>
	}
	
	if (counterDir == 1)	// increases dutycycle at each interrupt
 21c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 220:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 224:	81 30       	cpi	r24, 0x01	; 1
 226:	91 05       	cpc	r25, r1
 228:	89 f4       	brne	.+34     	; 0x24c <__vector_16+0x15a>
	{
		dutyCycle += 1.64;	// 1.64 sets blinking cycle to 2s
 22a:	25 e8       	ldi	r18, 0x85	; 133
 22c:	3b ee       	ldi	r19, 0xEB	; 235
 22e:	41 ed       	ldi	r20, 0xD1	; 209
 230:	5f e3       	ldi	r21, 0x3F	; 63
 232:	c7 01       	movw	r24, r14
 234:	b6 01       	movw	r22, r12
 236:	0e 94 4e 01 	call	0x29c	; 0x29c <__addsf3>
 23a:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <dutyCycle>
 23e:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <dutyCycle+0x1>
 242:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <dutyCycle+0x2>
 246:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <dutyCycle+0x3>
 24a:	12 c0       	rjmp	.+36     	; 0x270 <__vector_16+0x17e>
	}
	else if (counterDir == 0)	// decreases dutycycle at each interrupt
 24c:	89 2b       	or	r24, r25
 24e:	81 f4       	brne	.+32     	; 0x270 <__vector_16+0x17e>
	{
		dutyCycle -= 1.64;	// 1.64 sets blinking cycle to 2s
 250:	25 e8       	ldi	r18, 0x85	; 133
 252:	3b ee       	ldi	r19, 0xEB	; 235
 254:	41 ed       	ldi	r20, 0xD1	; 209
 256:	5f e3       	ldi	r21, 0x3F	; 63
 258:	c7 01       	movw	r24, r14
 25a:	b6 01       	movw	r22, r12
 25c:	0e 94 4d 01 	call	0x29a	; 0x29a <__subsf3>
 260:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <dutyCycle>
 264:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <dutyCycle+0x1>
 268:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <dutyCycle+0x2>
 26c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <dutyCycle+0x3>
	}
}
 270:	ff 91       	pop	r31
 272:	ef 91       	pop	r30
 274:	bf 91       	pop	r27
 276:	af 91       	pop	r26
 278:	9f 91       	pop	r25
 27a:	8f 91       	pop	r24
 27c:	7f 91       	pop	r23
 27e:	6f 91       	pop	r22
 280:	5f 91       	pop	r21
 282:	4f 91       	pop	r20
 284:	3f 91       	pop	r19
 286:	2f 91       	pop	r18
 288:	ff 90       	pop	r15
 28a:	ef 90       	pop	r14
 28c:	df 90       	pop	r13
 28e:	cf 90       	pop	r12
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <__subsf3>:
 29a:	50 58       	subi	r21, 0x80	; 128

0000029c <__addsf3>:
 29c:	bb 27       	eor	r27, r27
 29e:	aa 27       	eor	r26, r26
 2a0:	0e 94 65 01 	call	0x2ca	; 0x2ca <__addsf3x>
 2a4:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_round>
 2a8:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_pscA>
 2ac:	38 f0       	brcs	.+14     	; 0x2bc <__addsf3+0x20>
 2ae:	0e 94 94 02 	call	0x528	; 0x528 <__fp_pscB>
 2b2:	20 f0       	brcs	.+8      	; 0x2bc <__addsf3+0x20>
 2b4:	39 f4       	brne	.+14     	; 0x2c4 <__addsf3+0x28>
 2b6:	9f 3f       	cpi	r25, 0xFF	; 255
 2b8:	19 f4       	brne	.+6      	; 0x2c0 <__addsf3+0x24>
 2ba:	26 f4       	brtc	.+8      	; 0x2c4 <__addsf3+0x28>
 2bc:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_nan>
 2c0:	0e f4       	brtc	.+2      	; 0x2c4 <__addsf3+0x28>
 2c2:	e0 95       	com	r30
 2c4:	e7 fb       	bst	r30, 7
 2c6:	0c 94 84 02 	jmp	0x508	; 0x508 <__fp_inf>

000002ca <__addsf3x>:
 2ca:	e9 2f       	mov	r30, r25
 2cc:	0e 94 ac 02 	call	0x558	; 0x558 <__fp_split3>
 2d0:	58 f3       	brcs	.-42     	; 0x2a8 <__addsf3+0xc>
 2d2:	ba 17       	cp	r27, r26
 2d4:	62 07       	cpc	r22, r18
 2d6:	73 07       	cpc	r23, r19
 2d8:	84 07       	cpc	r24, r20
 2da:	95 07       	cpc	r25, r21
 2dc:	20 f0       	brcs	.+8      	; 0x2e6 <__addsf3x+0x1c>
 2de:	79 f4       	brne	.+30     	; 0x2fe <__addsf3x+0x34>
 2e0:	a6 f5       	brtc	.+104    	; 0x34a <__addsf3x+0x80>
 2e2:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_zero>
 2e6:	0e f4       	brtc	.+2      	; 0x2ea <__addsf3x+0x20>
 2e8:	e0 95       	com	r30
 2ea:	0b 2e       	mov	r0, r27
 2ec:	ba 2f       	mov	r27, r26
 2ee:	a0 2d       	mov	r26, r0
 2f0:	0b 01       	movw	r0, r22
 2f2:	b9 01       	movw	r22, r18
 2f4:	90 01       	movw	r18, r0
 2f6:	0c 01       	movw	r0, r24
 2f8:	ca 01       	movw	r24, r20
 2fa:	a0 01       	movw	r20, r0
 2fc:	11 24       	eor	r1, r1
 2fe:	ff 27       	eor	r31, r31
 300:	59 1b       	sub	r21, r25
 302:	99 f0       	breq	.+38     	; 0x32a <__addsf3x+0x60>
 304:	59 3f       	cpi	r21, 0xF9	; 249
 306:	50 f4       	brcc	.+20     	; 0x31c <__addsf3x+0x52>
 308:	50 3e       	cpi	r21, 0xE0	; 224
 30a:	68 f1       	brcs	.+90     	; 0x366 <__addsf3x+0x9c>
 30c:	1a 16       	cp	r1, r26
 30e:	f0 40       	sbci	r31, 0x00	; 0
 310:	a2 2f       	mov	r26, r18
 312:	23 2f       	mov	r18, r19
 314:	34 2f       	mov	r19, r20
 316:	44 27       	eor	r20, r20
 318:	58 5f       	subi	r21, 0xF8	; 248
 31a:	f3 cf       	rjmp	.-26     	; 0x302 <__addsf3x+0x38>
 31c:	46 95       	lsr	r20
 31e:	37 95       	ror	r19
 320:	27 95       	ror	r18
 322:	a7 95       	ror	r26
 324:	f0 40       	sbci	r31, 0x00	; 0
 326:	53 95       	inc	r21
 328:	c9 f7       	brne	.-14     	; 0x31c <__addsf3x+0x52>
 32a:	7e f4       	brtc	.+30     	; 0x34a <__addsf3x+0x80>
 32c:	1f 16       	cp	r1, r31
 32e:	ba 0b       	sbc	r27, r26
 330:	62 0b       	sbc	r22, r18
 332:	73 0b       	sbc	r23, r19
 334:	84 0b       	sbc	r24, r20
 336:	ba f0       	brmi	.+46     	; 0x366 <__addsf3x+0x9c>
 338:	91 50       	subi	r25, 0x01	; 1
 33a:	a1 f0       	breq	.+40     	; 0x364 <__addsf3x+0x9a>
 33c:	ff 0f       	add	r31, r31
 33e:	bb 1f       	adc	r27, r27
 340:	66 1f       	adc	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	c2 f7       	brpl	.-16     	; 0x338 <__addsf3x+0x6e>
 348:	0e c0       	rjmp	.+28     	; 0x366 <__addsf3x+0x9c>
 34a:	ba 0f       	add	r27, r26
 34c:	62 1f       	adc	r22, r18
 34e:	73 1f       	adc	r23, r19
 350:	84 1f       	adc	r24, r20
 352:	48 f4       	brcc	.+18     	; 0x366 <__addsf3x+0x9c>
 354:	87 95       	ror	r24
 356:	77 95       	ror	r23
 358:	67 95       	ror	r22
 35a:	b7 95       	ror	r27
 35c:	f7 95       	ror	r31
 35e:	9e 3f       	cpi	r25, 0xFE	; 254
 360:	08 f0       	brcs	.+2      	; 0x364 <__addsf3x+0x9a>
 362:	b0 cf       	rjmp	.-160    	; 0x2c4 <__addsf3+0x28>
 364:	93 95       	inc	r25
 366:	88 0f       	add	r24, r24
 368:	08 f0       	brcs	.+2      	; 0x36c <__addsf3x+0xa2>
 36a:	99 27       	eor	r25, r25
 36c:	ee 0f       	add	r30, r30
 36e:	97 95       	ror	r25
 370:	87 95       	ror	r24
 372:	08 95       	ret

00000374 <__cmpsf2>:
 374:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__fp_cmp>
 378:	08 f4       	brcc	.+2      	; 0x37c <__cmpsf2+0x8>
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	08 95       	ret

0000037e <__divsf3>:
 37e:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__divsf3x>
 382:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_round>
 386:	0e 94 94 02 	call	0x528	; 0x528 <__fp_pscB>
 38a:	58 f0       	brcs	.+22     	; 0x3a2 <__divsf3+0x24>
 38c:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_pscA>
 390:	40 f0       	brcs	.+16     	; 0x3a2 <__divsf3+0x24>
 392:	29 f4       	brne	.+10     	; 0x39e <__divsf3+0x20>
 394:	5f 3f       	cpi	r21, 0xFF	; 255
 396:	29 f0       	breq	.+10     	; 0x3a2 <__divsf3+0x24>
 398:	0c 94 84 02 	jmp	0x508	; 0x508 <__fp_inf>
 39c:	51 11       	cpse	r21, r1
 39e:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_szero>
 3a2:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_nan>

000003a6 <__divsf3x>:
 3a6:	0e 94 ac 02 	call	0x558	; 0x558 <__fp_split3>
 3aa:	68 f3       	brcs	.-38     	; 0x386 <__divsf3+0x8>

000003ac <__divsf3_pse>:
 3ac:	99 23       	and	r25, r25
 3ae:	b1 f3       	breq	.-20     	; 0x39c <__divsf3+0x1e>
 3b0:	55 23       	and	r21, r21
 3b2:	91 f3       	breq	.-28     	; 0x398 <__divsf3+0x1a>
 3b4:	95 1b       	sub	r25, r21
 3b6:	55 0b       	sbc	r21, r21
 3b8:	bb 27       	eor	r27, r27
 3ba:	aa 27       	eor	r26, r26
 3bc:	62 17       	cp	r22, r18
 3be:	73 07       	cpc	r23, r19
 3c0:	84 07       	cpc	r24, r20
 3c2:	38 f0       	brcs	.+14     	; 0x3d2 <__divsf3_pse+0x26>
 3c4:	9f 5f       	subi	r25, 0xFF	; 255
 3c6:	5f 4f       	sbci	r21, 0xFF	; 255
 3c8:	22 0f       	add	r18, r18
 3ca:	33 1f       	adc	r19, r19
 3cc:	44 1f       	adc	r20, r20
 3ce:	aa 1f       	adc	r26, r26
 3d0:	a9 f3       	breq	.-22     	; 0x3bc <__divsf3_pse+0x10>
 3d2:	35 d0       	rcall	.+106    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3d4:	0e 2e       	mov	r0, r30
 3d6:	3a f0       	brmi	.+14     	; 0x3e6 <__divsf3_pse+0x3a>
 3d8:	e0 e8       	ldi	r30, 0x80	; 128
 3da:	32 d0       	rcall	.+100    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 3dc:	91 50       	subi	r25, 0x01	; 1
 3de:	50 40       	sbci	r21, 0x00	; 0
 3e0:	e6 95       	lsr	r30
 3e2:	00 1c       	adc	r0, r0
 3e4:	ca f7       	brpl	.-14     	; 0x3d8 <__divsf3_pse+0x2c>
 3e6:	2b d0       	rcall	.+86     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3e8:	fe 2f       	mov	r31, r30
 3ea:	29 d0       	rcall	.+82     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 3ec:	66 0f       	add	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	88 1f       	adc	r24, r24
 3f2:	bb 1f       	adc	r27, r27
 3f4:	26 17       	cp	r18, r22
 3f6:	37 07       	cpc	r19, r23
 3f8:	48 07       	cpc	r20, r24
 3fa:	ab 07       	cpc	r26, r27
 3fc:	b0 e8       	ldi	r27, 0x80	; 128
 3fe:	09 f0       	breq	.+2      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 400:	bb 0b       	sbc	r27, r27
 402:	80 2d       	mov	r24, r0
 404:	bf 01       	movw	r22, r30
 406:	ff 27       	eor	r31, r31
 408:	93 58       	subi	r25, 0x83	; 131
 40a:	5f 4f       	sbci	r21, 0xFF	; 255
 40c:	3a f0       	brmi	.+14     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40e:	9e 3f       	cpi	r25, 0xFE	; 254
 410:	51 05       	cpc	r21, r1
 412:	78 f0       	brcs	.+30     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 414:	0c 94 84 02 	jmp	0x508	; 0x508 <__fp_inf>
 418:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_szero>
 41c:	5f 3f       	cpi	r21, 0xFF	; 255
 41e:	e4 f3       	brlt	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 420:	98 3e       	cpi	r25, 0xE8	; 232
 422:	d4 f3       	brlt	.-12     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 424:	86 95       	lsr	r24
 426:	77 95       	ror	r23
 428:	67 95       	ror	r22
 42a:	b7 95       	ror	r27
 42c:	f7 95       	ror	r31
 42e:	9f 5f       	subi	r25, 0xFF	; 255
 430:	c9 f7       	brne	.-14     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 432:	88 0f       	add	r24, r24
 434:	91 1d       	adc	r25, r1
 436:	96 95       	lsr	r25
 438:	87 95       	ror	r24
 43a:	97 f9       	bld	r25, 7
 43c:	08 95       	ret
 43e:	e1 e0       	ldi	r30, 0x01	; 1
 440:	66 0f       	add	r22, r22
 442:	77 1f       	adc	r23, r23
 444:	88 1f       	adc	r24, r24
 446:	bb 1f       	adc	r27, r27
 448:	62 17       	cp	r22, r18
 44a:	73 07       	cpc	r23, r19
 44c:	84 07       	cpc	r24, r20
 44e:	ba 07       	cpc	r27, r26
 450:	20 f0       	brcs	.+8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 452:	62 1b       	sub	r22, r18
 454:	73 0b       	sbc	r23, r19
 456:	84 0b       	sbc	r24, r20
 458:	ba 0b       	sbc	r27, r26
 45a:	ee 1f       	adc	r30, r30
 45c:	88 f7       	brcc	.-30     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 45e:	e0 95       	com	r30
 460:	08 95       	ret

00000462 <__fixunssfsi>:
 462:	0e 94 b4 02 	call	0x568	; 0x568 <__fp_splitA>
 466:	88 f0       	brcs	.+34     	; 0x48a <__fixunssfsi+0x28>
 468:	9f 57       	subi	r25, 0x7F	; 127
 46a:	98 f0       	brcs	.+38     	; 0x492 <__fixunssfsi+0x30>
 46c:	b9 2f       	mov	r27, r25
 46e:	99 27       	eor	r25, r25
 470:	b7 51       	subi	r27, 0x17	; 23
 472:	b0 f0       	brcs	.+44     	; 0x4a0 <__fixunssfsi+0x3e>
 474:	e1 f0       	breq	.+56     	; 0x4ae <__fixunssfsi+0x4c>
 476:	66 0f       	add	r22, r22
 478:	77 1f       	adc	r23, r23
 47a:	88 1f       	adc	r24, r24
 47c:	99 1f       	adc	r25, r25
 47e:	1a f0       	brmi	.+6      	; 0x486 <__fixunssfsi+0x24>
 480:	ba 95       	dec	r27
 482:	c9 f7       	brne	.-14     	; 0x476 <__fixunssfsi+0x14>
 484:	14 c0       	rjmp	.+40     	; 0x4ae <__fixunssfsi+0x4c>
 486:	b1 30       	cpi	r27, 0x01	; 1
 488:	91 f0       	breq	.+36     	; 0x4ae <__fixunssfsi+0x4c>
 48a:	0e 94 ce 02 	call	0x59c	; 0x59c <__fp_zero>
 48e:	b1 e0       	ldi	r27, 0x01	; 1
 490:	08 95       	ret
 492:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__fp_zero>
 496:	67 2f       	mov	r22, r23
 498:	78 2f       	mov	r23, r24
 49a:	88 27       	eor	r24, r24
 49c:	b8 5f       	subi	r27, 0xF8	; 248
 49e:	39 f0       	breq	.+14     	; 0x4ae <__fixunssfsi+0x4c>
 4a0:	b9 3f       	cpi	r27, 0xF9	; 249
 4a2:	cc f3       	brlt	.-14     	; 0x496 <__fixunssfsi+0x34>
 4a4:	86 95       	lsr	r24
 4a6:	77 95       	ror	r23
 4a8:	67 95       	ror	r22
 4aa:	b3 95       	inc	r27
 4ac:	d9 f7       	brne	.-10     	; 0x4a4 <__fixunssfsi+0x42>
 4ae:	3e f4       	brtc	.+14     	; 0x4be <__fixunssfsi+0x5c>
 4b0:	90 95       	com	r25
 4b2:	80 95       	com	r24
 4b4:	70 95       	com	r23
 4b6:	61 95       	neg	r22
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	08 95       	ret

000004c0 <__fp_cmp>:
 4c0:	99 0f       	add	r25, r25
 4c2:	00 08       	sbc	r0, r0
 4c4:	55 0f       	add	r21, r21
 4c6:	aa 0b       	sbc	r26, r26
 4c8:	e0 e8       	ldi	r30, 0x80	; 128
 4ca:	fe ef       	ldi	r31, 0xFE	; 254
 4cc:	16 16       	cp	r1, r22
 4ce:	17 06       	cpc	r1, r23
 4d0:	e8 07       	cpc	r30, r24
 4d2:	f9 07       	cpc	r31, r25
 4d4:	c0 f0       	brcs	.+48     	; 0x506 <__stack+0x7>
 4d6:	12 16       	cp	r1, r18
 4d8:	13 06       	cpc	r1, r19
 4da:	e4 07       	cpc	r30, r20
 4dc:	f5 07       	cpc	r31, r21
 4de:	98 f0       	brcs	.+38     	; 0x506 <__stack+0x7>
 4e0:	62 1b       	sub	r22, r18
 4e2:	73 0b       	sbc	r23, r19
 4e4:	84 0b       	sbc	r24, r20
 4e6:	95 0b       	sbc	r25, r21
 4e8:	39 f4       	brne	.+14     	; 0x4f8 <__fp_cmp+0x38>
 4ea:	0a 26       	eor	r0, r26
 4ec:	61 f0       	breq	.+24     	; 0x506 <__stack+0x7>
 4ee:	23 2b       	or	r18, r19
 4f0:	24 2b       	or	r18, r20
 4f2:	25 2b       	or	r18, r21
 4f4:	21 f4       	brne	.+8      	; 0x4fe <__fp_cmp+0x3e>
 4f6:	08 95       	ret
 4f8:	0a 26       	eor	r0, r26
 4fa:	09 f4       	brne	.+2      	; 0x4fe <__fp_cmp+0x3e>
 4fc:	a1 40       	sbci	r26, 0x01	; 1
 4fe:	a6 95       	lsr	r26
 500:	8f ef       	ldi	r24, 0xFF	; 255
 502:	81 1d       	adc	r24, r1
 504:	81 1d       	adc	r24, r1
 506:	08 95       	ret

00000508 <__fp_inf>:
 508:	97 f9       	bld	r25, 7
 50a:	9f 67       	ori	r25, 0x7F	; 127
 50c:	80 e8       	ldi	r24, 0x80	; 128
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	60 e0       	ldi	r22, 0x00	; 0
 512:	08 95       	ret

00000514 <__fp_nan>:
 514:	9f ef       	ldi	r25, 0xFF	; 255
 516:	80 ec       	ldi	r24, 0xC0	; 192
 518:	08 95       	ret

0000051a <__fp_pscA>:
 51a:	00 24       	eor	r0, r0
 51c:	0a 94       	dec	r0
 51e:	16 16       	cp	r1, r22
 520:	17 06       	cpc	r1, r23
 522:	18 06       	cpc	r1, r24
 524:	09 06       	cpc	r0, r25
 526:	08 95       	ret

00000528 <__fp_pscB>:
 528:	00 24       	eor	r0, r0
 52a:	0a 94       	dec	r0
 52c:	12 16       	cp	r1, r18
 52e:	13 06       	cpc	r1, r19
 530:	14 06       	cpc	r1, r20
 532:	05 06       	cpc	r0, r21
 534:	08 95       	ret

00000536 <__fp_round>:
 536:	09 2e       	mov	r0, r25
 538:	03 94       	inc	r0
 53a:	00 0c       	add	r0, r0
 53c:	11 f4       	brne	.+4      	; 0x542 <__fp_round+0xc>
 53e:	88 23       	and	r24, r24
 540:	52 f0       	brmi	.+20     	; 0x556 <__fp_round+0x20>
 542:	bb 0f       	add	r27, r27
 544:	40 f4       	brcc	.+16     	; 0x556 <__fp_round+0x20>
 546:	bf 2b       	or	r27, r31
 548:	11 f4       	brne	.+4      	; 0x54e <__fp_round+0x18>
 54a:	60 ff       	sbrs	r22, 0
 54c:	04 c0       	rjmp	.+8      	; 0x556 <__fp_round+0x20>
 54e:	6f 5f       	subi	r22, 0xFF	; 255
 550:	7f 4f       	sbci	r23, 0xFF	; 255
 552:	8f 4f       	sbci	r24, 0xFF	; 255
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	08 95       	ret

00000558 <__fp_split3>:
 558:	57 fd       	sbrc	r21, 7
 55a:	90 58       	subi	r25, 0x80	; 128
 55c:	44 0f       	add	r20, r20
 55e:	55 1f       	adc	r21, r21
 560:	59 f0       	breq	.+22     	; 0x578 <__fp_splitA+0x10>
 562:	5f 3f       	cpi	r21, 0xFF	; 255
 564:	71 f0       	breq	.+28     	; 0x582 <__fp_splitA+0x1a>
 566:	47 95       	ror	r20

00000568 <__fp_splitA>:
 568:	88 0f       	add	r24, r24
 56a:	97 fb       	bst	r25, 7
 56c:	99 1f       	adc	r25, r25
 56e:	61 f0       	breq	.+24     	; 0x588 <__fp_splitA+0x20>
 570:	9f 3f       	cpi	r25, 0xFF	; 255
 572:	79 f0       	breq	.+30     	; 0x592 <__fp_splitA+0x2a>
 574:	87 95       	ror	r24
 576:	08 95       	ret
 578:	12 16       	cp	r1, r18
 57a:	13 06       	cpc	r1, r19
 57c:	14 06       	cpc	r1, r20
 57e:	55 1f       	adc	r21, r21
 580:	f2 cf       	rjmp	.-28     	; 0x566 <__fp_split3+0xe>
 582:	46 95       	lsr	r20
 584:	f1 df       	rcall	.-30     	; 0x568 <__fp_splitA>
 586:	08 c0       	rjmp	.+16     	; 0x598 <__fp_splitA+0x30>
 588:	16 16       	cp	r1, r22
 58a:	17 06       	cpc	r1, r23
 58c:	18 06       	cpc	r1, r24
 58e:	99 1f       	adc	r25, r25
 590:	f1 cf       	rjmp	.-30     	; 0x574 <__fp_splitA+0xc>
 592:	86 95       	lsr	r24
 594:	71 05       	cpc	r23, r1
 596:	61 05       	cpc	r22, r1
 598:	08 94       	sec
 59a:	08 95       	ret

0000059c <__fp_zero>:
 59c:	e8 94       	clt

0000059e <__fp_szero>:
 59e:	bb 27       	eor	r27, r27
 5a0:	66 27       	eor	r22, r22
 5a2:	77 27       	eor	r23, r23
 5a4:	cb 01       	movw	r24, r22
 5a6:	97 f9       	bld	r25, 7
 5a8:	08 95       	ret

000005aa <__gesf2>:
 5aa:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__fp_cmp>
 5ae:	08 f4       	brcc	.+2      	; 0x5b2 <__gesf2+0x8>
 5b0:	8f ef       	ldi	r24, 0xFF	; 255
 5b2:	08 95       	ret

000005b4 <__mulsf3>:
 5b4:	0e 94 ed 02 	call	0x5da	; 0x5da <__mulsf3x>
 5b8:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_round>
 5bc:	0e 94 8d 02 	call	0x51a	; 0x51a <__fp_pscA>
 5c0:	38 f0       	brcs	.+14     	; 0x5d0 <__mulsf3+0x1c>
 5c2:	0e 94 94 02 	call	0x528	; 0x528 <__fp_pscB>
 5c6:	20 f0       	brcs	.+8      	; 0x5d0 <__mulsf3+0x1c>
 5c8:	95 23       	and	r25, r21
 5ca:	11 f0       	breq	.+4      	; 0x5d0 <__mulsf3+0x1c>
 5cc:	0c 94 84 02 	jmp	0x508	; 0x508 <__fp_inf>
 5d0:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_nan>
 5d4:	11 24       	eor	r1, r1
 5d6:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_szero>

000005da <__mulsf3x>:
 5da:	0e 94 ac 02 	call	0x558	; 0x558 <__fp_split3>
 5de:	70 f3       	brcs	.-36     	; 0x5bc <__mulsf3+0x8>

000005e0 <__mulsf3_pse>:
 5e0:	95 9f       	mul	r25, r21
 5e2:	c1 f3       	breq	.-16     	; 0x5d4 <__mulsf3+0x20>
 5e4:	95 0f       	add	r25, r21
 5e6:	50 e0       	ldi	r21, 0x00	; 0
 5e8:	55 1f       	adc	r21, r21
 5ea:	62 9f       	mul	r22, r18
 5ec:	f0 01       	movw	r30, r0
 5ee:	72 9f       	mul	r23, r18
 5f0:	bb 27       	eor	r27, r27
 5f2:	f0 0d       	add	r31, r0
 5f4:	b1 1d       	adc	r27, r1
 5f6:	63 9f       	mul	r22, r19
 5f8:	aa 27       	eor	r26, r26
 5fa:	f0 0d       	add	r31, r0
 5fc:	b1 1d       	adc	r27, r1
 5fe:	aa 1f       	adc	r26, r26
 600:	64 9f       	mul	r22, r20
 602:	66 27       	eor	r22, r22
 604:	b0 0d       	add	r27, r0
 606:	a1 1d       	adc	r26, r1
 608:	66 1f       	adc	r22, r22
 60a:	82 9f       	mul	r24, r18
 60c:	22 27       	eor	r18, r18
 60e:	b0 0d       	add	r27, r0
 610:	a1 1d       	adc	r26, r1
 612:	62 1f       	adc	r22, r18
 614:	73 9f       	mul	r23, r19
 616:	b0 0d       	add	r27, r0
 618:	a1 1d       	adc	r26, r1
 61a:	62 1f       	adc	r22, r18
 61c:	83 9f       	mul	r24, r19
 61e:	a0 0d       	add	r26, r0
 620:	61 1d       	adc	r22, r1
 622:	22 1f       	adc	r18, r18
 624:	74 9f       	mul	r23, r20
 626:	33 27       	eor	r19, r19
 628:	a0 0d       	add	r26, r0
 62a:	61 1d       	adc	r22, r1
 62c:	23 1f       	adc	r18, r19
 62e:	84 9f       	mul	r24, r20
 630:	60 0d       	add	r22, r0
 632:	21 1d       	adc	r18, r1
 634:	82 2f       	mov	r24, r18
 636:	76 2f       	mov	r23, r22
 638:	6a 2f       	mov	r22, r26
 63a:	11 24       	eor	r1, r1
 63c:	9f 57       	subi	r25, 0x7F	; 127
 63e:	50 40       	sbci	r21, 0x00	; 0
 640:	9a f0       	brmi	.+38     	; 0x668 <__mulsf3_pse+0x88>
 642:	f1 f0       	breq	.+60     	; 0x680 <__mulsf3_pse+0xa0>
 644:	88 23       	and	r24, r24
 646:	4a f0       	brmi	.+18     	; 0x65a <__mulsf3_pse+0x7a>
 648:	ee 0f       	add	r30, r30
 64a:	ff 1f       	adc	r31, r31
 64c:	bb 1f       	adc	r27, r27
 64e:	66 1f       	adc	r22, r22
 650:	77 1f       	adc	r23, r23
 652:	88 1f       	adc	r24, r24
 654:	91 50       	subi	r25, 0x01	; 1
 656:	50 40       	sbci	r21, 0x00	; 0
 658:	a9 f7       	brne	.-22     	; 0x644 <__mulsf3_pse+0x64>
 65a:	9e 3f       	cpi	r25, 0xFE	; 254
 65c:	51 05       	cpc	r21, r1
 65e:	80 f0       	brcs	.+32     	; 0x680 <__mulsf3_pse+0xa0>
 660:	0c 94 84 02 	jmp	0x508	; 0x508 <__fp_inf>
 664:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_szero>
 668:	5f 3f       	cpi	r21, 0xFF	; 255
 66a:	e4 f3       	brlt	.-8      	; 0x664 <__mulsf3_pse+0x84>
 66c:	98 3e       	cpi	r25, 0xE8	; 232
 66e:	d4 f3       	brlt	.-12     	; 0x664 <__mulsf3_pse+0x84>
 670:	86 95       	lsr	r24
 672:	77 95       	ror	r23
 674:	67 95       	ror	r22
 676:	b7 95       	ror	r27
 678:	f7 95       	ror	r31
 67a:	e7 95       	ror	r30
 67c:	9f 5f       	subi	r25, 0xFF	; 255
 67e:	c1 f7       	brne	.-16     	; 0x670 <__mulsf3_pse+0x90>
 680:	fe 2b       	or	r31, r30
 682:	88 0f       	add	r24, r24
 684:	91 1d       	adc	r25, r1
 686:	96 95       	lsr	r25
 688:	87 95       	ror	r24
 68a:	97 f9       	bld	r25, 7
 68c:	08 95       	ret

0000068e <_exit>:
 68e:	f8 94       	cli

00000690 <__stop_program>:
 690:	ff cf       	rjmp	.-2      	; 0x690 <__stop_program>
