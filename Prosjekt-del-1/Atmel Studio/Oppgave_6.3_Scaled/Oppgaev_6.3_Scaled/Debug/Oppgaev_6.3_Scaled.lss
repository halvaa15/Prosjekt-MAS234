
Oppgaev_6.3_Scaled.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000068e  00000722  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000068e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800102  00800102  00000724  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000724  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000754  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000790  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006e9  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000636  00000000  00000000  00000ea9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000212  00000000  00000000  000014df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  000016f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fd  00000000  00000000  00001794  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ff  00000000  00000000  00001b91  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e8       	ldi	r30, 0x8E	; 142
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 30       	cpi	r26, 0x0A	; 10
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 74 00 	call	0xe8	; 0xe8 <main>
  9e:	0c 94 45 03 	jmp	0x68a	; 0x68a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z13PWM_init_8bitv>:
int counterDir = 1;
double lightConv = 0.0;

void PWM_init_8bit()	// initializing PWM 8-bit
{
	DDRD |= (1 << PD6);	// set PD6 as output
  a6:	56 9a       	sbi	0x0a, 6	; 10
	
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);	// set FAST 8-bit PWM, with clear OC0A on compare
  a8:	83 e8       	ldi	r24, 0x83	; 131
  aa:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1 << TOIE0);	// set interrupt register to overflow interrupt
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	
	sei();	// set global interrupt enable
  b2:	78 94       	sei
	
	TCCR0B = (1 << CS02);	// set prescaling register to clk/256
  b4:	84 e0       	ldi	r24, 0x04	; 4
  b6:	85 bd       	out	0x25, r24	; 37
	OCR0A = (dutyCycle/100.0)*255.0;	// set clear on compare value
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	48 ec       	ldi	r20, 0xC8	; 200
  be:	52 e4       	ldi	r21, 0x42	; 66
  c0:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <dutyCycle>
  c4:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <dutyCycle+0x1>
  c8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <dutyCycle+0x2>
  cc:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <dutyCycle+0x3>
  d0:	0e 94 bd 01 	call	0x37a	; 0x37a <__divsf3>
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 e0       	ldi	r19, 0x00	; 0
  d8:	4f e7       	ldi	r20, 0x7F	; 127
  da:	53 e4       	ldi	r21, 0x43	; 67
  dc:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3>
  e0:	0e 94 2f 02 	call	0x45e	; 0x45e <__fixunssfsi>
  e4:	67 bd       	out	0x27, r22	; 39
  e6:	08 95       	ret

000000e8 <main>:
}

int main(void)
{
	PWM_init_8bit(); // enables FAST PWM 8-bit
  e8:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z13PWM_init_8bitv>
  ec:	ff cf       	rjmp	.-2      	; 0xec <main+0x4>

000000ee <__vector_16>:
	{
	}
}

ISR(TIMER0_OVF_vect)
{	
  ee:	1f 92       	push	r1
  f0:	0f 92       	push	r0
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	0f 92       	push	r0
  f6:	11 24       	eor	r1, r1
  f8:	cf 92       	push	r12
  fa:	df 92       	push	r13
  fc:	ef 92       	push	r14
  fe:	ff 92       	push	r15
 100:	2f 93       	push	r18
 102:	3f 93       	push	r19
 104:	4f 93       	push	r20
 106:	5f 93       	push	r21
 108:	6f 93       	push	r22
 10a:	7f 93       	push	r23
 10c:	8f 93       	push	r24
 10e:	9f 93       	push	r25
 110:	af 93       	push	r26
 112:	bf 93       	push	r27
 114:	ef 93       	push	r30
 116:	ff 93       	push	r31
	if (dutyCycle < 0.0)	// Prevents dutycycle from decreasing below 100 (causing OCR0A error)
 118:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <dutyCycle>
 11c:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <dutyCycle+0x1>
 120:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <dutyCycle+0x2>
 124:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <dutyCycle+0x3>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	a9 01       	movw	r20, r18
 12e:	c7 01       	movw	r24, r14
 130:	b6 01       	movw	r22, r12
 132:	0e 94 b8 01 	call	0x370	; 0x370 <__cmpsf2>
 136:	88 23       	and	r24, r24
 138:	4c f4       	brge	.+18     	; 0x14c <__vector_16+0x5e>
	{
		dutyCycle = 0.0;
 13a:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <dutyCycle>
 13e:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <dutyCycle+0x1>
 142:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <dutyCycle+0x2>
 146:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <dutyCycle+0x3>
 14a:	16 c0       	rjmp	.+44     	; 0x178 <__vector_16+0x8a>
	}
	if (dutyCycle > 100.0)// Prevents dutycycle from increasing above 100 (causing OCR0A error)
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	48 ec       	ldi	r20, 0xC8	; 200
 152:	52 e4       	ldi	r21, 0x42	; 66
 154:	c7 01       	movw	r24, r14
 156:	b6 01       	movw	r22, r12
 158:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__gesf2>
 15c:	18 16       	cp	r1, r24
 15e:	64 f4       	brge	.+24     	; 0x178 <__vector_16+0x8a>
	{
		dutyCycle = 100.0;
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	a8 ec       	ldi	r26, 0xC8	; 200
 166:	b2 e4       	ldi	r27, 0x42	; 66
 168:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <dutyCycle>
 16c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <dutyCycle+0x1>
 170:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <dutyCycle+0x2>
 174:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <dutyCycle+0x3>
	}

	lightConv = (pow(dutyCycle,2)) / (100);	// converts calculated light value to perceived light value
 178:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <dutyCycle>
 17c:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <dutyCycle+0x1>
 180:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <dutyCycle+0x2>
 184:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <dutyCycle+0x3>
 188:	9b 01       	movw	r18, r22
 18a:	ac 01       	movw	r20, r24
 18c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3>
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	48 ec       	ldi	r20, 0xC8	; 200
 196:	52 e4       	ldi	r21, 0x42	; 66
 198:	0e 94 bd 01 	call	0x37a	; 0x37a <__divsf3>
 19c:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <__data_end>
 1a0:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <__data_end+0x1>
 1a4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end+0x2>
 1a8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x3>
	
	OCR0A = (lightConv/100.0)*255.0;	// updates OCR0A value at every interrupt
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	48 ec       	ldi	r20, 0xC8	; 200
 1b2:	52 e4       	ldi	r21, 0x42	; 66
 1b4:	0e 94 bd 01 	call	0x37a	; 0x37a <__divsf3>
 1b8:	20 e0       	ldi	r18, 0x00	; 0
 1ba:	30 e0       	ldi	r19, 0x00	; 0
 1bc:	4f e7       	ldi	r20, 0x7F	; 127
 1be:	53 e4       	ldi	r21, 0x43	; 67
 1c0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__mulsf3>
 1c4:	0e 94 2f 02 	call	0x45e	; 0x45e <__fixunssfsi>
 1c8:	67 bd       	out	0x27, r22	; 39
	
	if (dutyCycle >= 100.0)	// flag for dimming down
 1ca:	c0 90 06 01 	lds	r12, 0x0106	; 0x800106 <dutyCycle>
 1ce:	d0 90 07 01 	lds	r13, 0x0107	; 0x800107 <dutyCycle+0x1>
 1d2:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <dutyCycle+0x2>
 1d6:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <dutyCycle+0x3>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	48 ec       	ldi	r20, 0xC8	; 200
 1e0:	52 e4       	ldi	r21, 0x42	; 66
 1e2:	c7 01       	movw	r24, r14
 1e4:	b6 01       	movw	r22, r12
 1e6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__gesf2>
 1ea:	88 23       	and	r24, r24
 1ec:	2c f0       	brlt	.+10     	; 0x1f8 <__vector_16+0x10a>
	{
		counterDir = 0;
 1ee:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
 1f2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 1f6:	2a c0       	rjmp	.+84     	; 0x24c <__vector_16+0x15e>
	}
	else if (dutyCycle <= 0.0)	// flag for dimming up
 1f8:	20 e0       	ldi	r18, 0x00	; 0
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	a9 01       	movw	r20, r18
 1fe:	c7 01       	movw	r24, r14
 200:	b6 01       	movw	r22, r12
 202:	0e 94 b8 01 	call	0x370	; 0x370 <__cmpsf2>
 206:	18 16       	cp	r1, r24
 208:	3c f0       	brlt	.+14     	; 0x218 <__vector_16+0x12a>
	{
		counterDir = 1.;
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 212:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 216:	07 c0       	rjmp	.+14     	; 0x226 <__vector_16+0x138>
	}
	
	if (counterDir == 1)	// increases dutycycle at each interrupt
 218:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 21c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 220:	81 30       	cpi	r24, 0x01	; 1
 222:	91 05       	cpc	r25, r1
 224:	89 f4       	brne	.+34     	; 0x248 <__vector_16+0x15a>
	{
		dutyCycle += 0.41;	// 0.4096 sets blinking cycle to 2s
 226:	25 e8       	ldi	r18, 0x85	; 133
 228:	3b ee       	ldi	r19, 0xEB	; 235
 22a:	41 ed       	ldi	r20, 0xD1	; 209
 22c:	5e e3       	ldi	r21, 0x3E	; 62
 22e:	c7 01       	movw	r24, r14
 230:	b6 01       	movw	r22, r12
 232:	0e 94 4c 01 	call	0x298	; 0x298 <__addsf3>
 236:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <dutyCycle>
 23a:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <dutyCycle+0x1>
 23e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <dutyCycle+0x2>
 242:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <dutyCycle+0x3>
 246:	12 c0       	rjmp	.+36     	; 0x26c <__vector_16+0x17e>
	}
	else if (counterDir == 0)	// decreases dutycycle at each interrupt
 248:	89 2b       	or	r24, r25
 24a:	81 f4       	brne	.+32     	; 0x26c <__vector_16+0x17e>
	{
		dutyCycle -= 0.41;	// 0.4096 sets blinking cycle to 2s
 24c:	25 e8       	ldi	r18, 0x85	; 133
 24e:	3b ee       	ldi	r19, 0xEB	; 235
 250:	41 ed       	ldi	r20, 0xD1	; 209
 252:	5e e3       	ldi	r21, 0x3E	; 62
 254:	c7 01       	movw	r24, r14
 256:	b6 01       	movw	r22, r12
 258:	0e 94 4b 01 	call	0x296	; 0x296 <__subsf3>
 25c:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <dutyCycle>
 260:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <dutyCycle+0x1>
 264:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <dutyCycle+0x2>
 268:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <dutyCycle+0x3>
	}
}
 26c:	ff 91       	pop	r31
 26e:	ef 91       	pop	r30
 270:	bf 91       	pop	r27
 272:	af 91       	pop	r26
 274:	9f 91       	pop	r25
 276:	8f 91       	pop	r24
 278:	7f 91       	pop	r23
 27a:	6f 91       	pop	r22
 27c:	5f 91       	pop	r21
 27e:	4f 91       	pop	r20
 280:	3f 91       	pop	r19
 282:	2f 91       	pop	r18
 284:	ff 90       	pop	r15
 286:	ef 90       	pop	r14
 288:	df 90       	pop	r13
 28a:	cf 90       	pop	r12
 28c:	0f 90       	pop	r0
 28e:	0f be       	out	0x3f, r0	; 63
 290:	0f 90       	pop	r0
 292:	1f 90       	pop	r1
 294:	18 95       	reti

00000296 <__subsf3>:
 296:	50 58       	subi	r21, 0x80	; 128

00000298 <__addsf3>:
 298:	bb 27       	eor	r27, r27
 29a:	aa 27       	eor	r26, r26
 29c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__addsf3x>
 2a0:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_round>
 2a4:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscA>
 2a8:	38 f0       	brcs	.+14     	; 0x2b8 <__addsf3+0x20>
 2aa:	0e 94 92 02 	call	0x524	; 0x524 <__fp_pscB>
 2ae:	20 f0       	brcs	.+8      	; 0x2b8 <__addsf3+0x20>
 2b0:	39 f4       	brne	.+14     	; 0x2c0 <__addsf3+0x28>
 2b2:	9f 3f       	cpi	r25, 0xFF	; 255
 2b4:	19 f4       	brne	.+6      	; 0x2bc <__addsf3+0x24>
 2b6:	26 f4       	brtc	.+8      	; 0x2c0 <__addsf3+0x28>
 2b8:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_nan>
 2bc:	0e f4       	brtc	.+2      	; 0x2c0 <__addsf3+0x28>
 2be:	e0 95       	com	r30
 2c0:	e7 fb       	bst	r30, 7
 2c2:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>

000002c6 <__addsf3x>:
 2c6:	e9 2f       	mov	r30, r25
 2c8:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_split3>
 2cc:	58 f3       	brcs	.-42     	; 0x2a4 <__addsf3+0xc>
 2ce:	ba 17       	cp	r27, r26
 2d0:	62 07       	cpc	r22, r18
 2d2:	73 07       	cpc	r23, r19
 2d4:	84 07       	cpc	r24, r20
 2d6:	95 07       	cpc	r25, r21
 2d8:	20 f0       	brcs	.+8      	; 0x2e2 <__addsf3x+0x1c>
 2da:	79 f4       	brne	.+30     	; 0x2fa <__addsf3x+0x34>
 2dc:	a6 f5       	brtc	.+104    	; 0x346 <__addsf3x+0x80>
 2de:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_zero>
 2e2:	0e f4       	brtc	.+2      	; 0x2e6 <__addsf3x+0x20>
 2e4:	e0 95       	com	r30
 2e6:	0b 2e       	mov	r0, r27
 2e8:	ba 2f       	mov	r27, r26
 2ea:	a0 2d       	mov	r26, r0
 2ec:	0b 01       	movw	r0, r22
 2ee:	b9 01       	movw	r22, r18
 2f0:	90 01       	movw	r18, r0
 2f2:	0c 01       	movw	r0, r24
 2f4:	ca 01       	movw	r24, r20
 2f6:	a0 01       	movw	r20, r0
 2f8:	11 24       	eor	r1, r1
 2fa:	ff 27       	eor	r31, r31
 2fc:	59 1b       	sub	r21, r25
 2fe:	99 f0       	breq	.+38     	; 0x326 <__addsf3x+0x60>
 300:	59 3f       	cpi	r21, 0xF9	; 249
 302:	50 f4       	brcc	.+20     	; 0x318 <__addsf3x+0x52>
 304:	50 3e       	cpi	r21, 0xE0	; 224
 306:	68 f1       	brcs	.+90     	; 0x362 <__addsf3x+0x9c>
 308:	1a 16       	cp	r1, r26
 30a:	f0 40       	sbci	r31, 0x00	; 0
 30c:	a2 2f       	mov	r26, r18
 30e:	23 2f       	mov	r18, r19
 310:	34 2f       	mov	r19, r20
 312:	44 27       	eor	r20, r20
 314:	58 5f       	subi	r21, 0xF8	; 248
 316:	f3 cf       	rjmp	.-26     	; 0x2fe <__addsf3x+0x38>
 318:	46 95       	lsr	r20
 31a:	37 95       	ror	r19
 31c:	27 95       	ror	r18
 31e:	a7 95       	ror	r26
 320:	f0 40       	sbci	r31, 0x00	; 0
 322:	53 95       	inc	r21
 324:	c9 f7       	brne	.-14     	; 0x318 <__addsf3x+0x52>
 326:	7e f4       	brtc	.+30     	; 0x346 <__addsf3x+0x80>
 328:	1f 16       	cp	r1, r31
 32a:	ba 0b       	sbc	r27, r26
 32c:	62 0b       	sbc	r22, r18
 32e:	73 0b       	sbc	r23, r19
 330:	84 0b       	sbc	r24, r20
 332:	ba f0       	brmi	.+46     	; 0x362 <__addsf3x+0x9c>
 334:	91 50       	subi	r25, 0x01	; 1
 336:	a1 f0       	breq	.+40     	; 0x360 <__addsf3x+0x9a>
 338:	ff 0f       	add	r31, r31
 33a:	bb 1f       	adc	r27, r27
 33c:	66 1f       	adc	r22, r22
 33e:	77 1f       	adc	r23, r23
 340:	88 1f       	adc	r24, r24
 342:	c2 f7       	brpl	.-16     	; 0x334 <__addsf3x+0x6e>
 344:	0e c0       	rjmp	.+28     	; 0x362 <__addsf3x+0x9c>
 346:	ba 0f       	add	r27, r26
 348:	62 1f       	adc	r22, r18
 34a:	73 1f       	adc	r23, r19
 34c:	84 1f       	adc	r24, r20
 34e:	48 f4       	brcc	.+18     	; 0x362 <__addsf3x+0x9c>
 350:	87 95       	ror	r24
 352:	77 95       	ror	r23
 354:	67 95       	ror	r22
 356:	b7 95       	ror	r27
 358:	f7 95       	ror	r31
 35a:	9e 3f       	cpi	r25, 0xFE	; 254
 35c:	08 f0       	brcs	.+2      	; 0x360 <__addsf3x+0x9a>
 35e:	b0 cf       	rjmp	.-160    	; 0x2c0 <__addsf3+0x28>
 360:	93 95       	inc	r25
 362:	88 0f       	add	r24, r24
 364:	08 f0       	brcs	.+2      	; 0x368 <__addsf3x+0xa2>
 366:	99 27       	eor	r25, r25
 368:	ee 0f       	add	r30, r30
 36a:	97 95       	ror	r25
 36c:	87 95       	ror	r24
 36e:	08 95       	ret

00000370 <__cmpsf2>:
 370:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_cmp>
 374:	08 f4       	brcc	.+2      	; 0x378 <__cmpsf2+0x8>
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	08 95       	ret

0000037a <__divsf3>:
 37a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__divsf3x>
 37e:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_round>
 382:	0e 94 92 02 	call	0x524	; 0x524 <__fp_pscB>
 386:	58 f0       	brcs	.+22     	; 0x39e <__divsf3+0x24>
 388:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscA>
 38c:	40 f0       	brcs	.+16     	; 0x39e <__divsf3+0x24>
 38e:	29 f4       	brne	.+10     	; 0x39a <__divsf3+0x20>
 390:	5f 3f       	cpi	r21, 0xFF	; 255
 392:	29 f0       	breq	.+10     	; 0x39e <__divsf3+0x24>
 394:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 398:	51 11       	cpse	r21, r1
 39a:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_szero>
 39e:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_nan>

000003a2 <__divsf3x>:
 3a2:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_split3>
 3a6:	68 f3       	brcs	.-38     	; 0x382 <__divsf3+0x8>

000003a8 <__divsf3_pse>:
 3a8:	99 23       	and	r25, r25
 3aa:	b1 f3       	breq	.-20     	; 0x398 <__divsf3+0x1e>
 3ac:	55 23       	and	r21, r21
 3ae:	91 f3       	breq	.-28     	; 0x394 <__divsf3+0x1a>
 3b0:	95 1b       	sub	r25, r21
 3b2:	55 0b       	sbc	r21, r21
 3b4:	bb 27       	eor	r27, r27
 3b6:	aa 27       	eor	r26, r26
 3b8:	62 17       	cp	r22, r18
 3ba:	73 07       	cpc	r23, r19
 3bc:	84 07       	cpc	r24, r20
 3be:	38 f0       	brcs	.+14     	; 0x3ce <__divsf3_pse+0x26>
 3c0:	9f 5f       	subi	r25, 0xFF	; 255
 3c2:	5f 4f       	sbci	r21, 0xFF	; 255
 3c4:	22 0f       	add	r18, r18
 3c6:	33 1f       	adc	r19, r19
 3c8:	44 1f       	adc	r20, r20
 3ca:	aa 1f       	adc	r26, r26
 3cc:	a9 f3       	breq	.-22     	; 0x3b8 <__divsf3_pse+0x10>
 3ce:	35 d0       	rcall	.+106    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3d0:	0e 2e       	mov	r0, r30
 3d2:	3a f0       	brmi	.+14     	; 0x3e2 <__divsf3_pse+0x3a>
 3d4:	e0 e8       	ldi	r30, 0x80	; 128
 3d6:	32 d0       	rcall	.+100    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 3d8:	91 50       	subi	r25, 0x01	; 1
 3da:	50 40       	sbci	r21, 0x00	; 0
 3dc:	e6 95       	lsr	r30
 3de:	00 1c       	adc	r0, r0
 3e0:	ca f7       	brpl	.-14     	; 0x3d4 <__divsf3_pse+0x2c>
 3e2:	2b d0       	rcall	.+86     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3e4:	fe 2f       	mov	r31, r30
 3e6:	29 d0       	rcall	.+82     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3e8:	66 0f       	add	r22, r22
 3ea:	77 1f       	adc	r23, r23
 3ec:	88 1f       	adc	r24, r24
 3ee:	bb 1f       	adc	r27, r27
 3f0:	26 17       	cp	r18, r22
 3f2:	37 07       	cpc	r19, r23
 3f4:	48 07       	cpc	r20, r24
 3f6:	ab 07       	cpc	r26, r27
 3f8:	b0 e8       	ldi	r27, 0x80	; 128
 3fa:	09 f0       	breq	.+2      	; 0x3fe <__divsf3_pse+0x56>
 3fc:	bb 0b       	sbc	r27, r27
 3fe:	80 2d       	mov	r24, r0
 400:	bf 01       	movw	r22, r30
 402:	ff 27       	eor	r31, r31
 404:	93 58       	subi	r25, 0x83	; 131
 406:	5f 4f       	sbci	r21, 0xFF	; 255
 408:	3a f0       	brmi	.+14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40a:	9e 3f       	cpi	r25, 0xFE	; 254
 40c:	51 05       	cpc	r21, r1
 40e:	78 f0       	brcs	.+30     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 410:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 414:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_szero>
 418:	5f 3f       	cpi	r21, 0xFF	; 255
 41a:	e4 f3       	brlt	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	98 3e       	cpi	r25, 0xE8	; 232
 41e:	d4 f3       	brlt	.-12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 420:	86 95       	lsr	r24
 422:	77 95       	ror	r23
 424:	67 95       	ror	r22
 426:	b7 95       	ror	r27
 428:	f7 95       	ror	r31
 42a:	9f 5f       	subi	r25, 0xFF	; 255
 42c:	c9 f7       	brne	.-14     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 42e:	88 0f       	add	r24, r24
 430:	91 1d       	adc	r25, r1
 432:	96 95       	lsr	r25
 434:	87 95       	ror	r24
 436:	97 f9       	bld	r25, 7
 438:	08 95       	ret
 43a:	e1 e0       	ldi	r30, 0x01	; 1
 43c:	66 0f       	add	r22, r22
 43e:	77 1f       	adc	r23, r23
 440:	88 1f       	adc	r24, r24
 442:	bb 1f       	adc	r27, r27
 444:	62 17       	cp	r22, r18
 446:	73 07       	cpc	r23, r19
 448:	84 07       	cpc	r24, r20
 44a:	ba 07       	cpc	r27, r26
 44c:	20 f0       	brcs	.+8      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44e:	62 1b       	sub	r22, r18
 450:	73 0b       	sbc	r23, r19
 452:	84 0b       	sbc	r24, r20
 454:	ba 0b       	sbc	r27, r26
 456:	ee 1f       	adc	r30, r30
 458:	88 f7       	brcc	.-30     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 45a:	e0 95       	com	r30
 45c:	08 95       	ret

0000045e <__fixunssfsi>:
 45e:	0e 94 b2 02 	call	0x564	; 0x564 <__fp_splitA>
 462:	88 f0       	brcs	.+34     	; 0x486 <__fixunssfsi+0x28>
 464:	9f 57       	subi	r25, 0x7F	; 127
 466:	98 f0       	brcs	.+38     	; 0x48e <__fixunssfsi+0x30>
 468:	b9 2f       	mov	r27, r25
 46a:	99 27       	eor	r25, r25
 46c:	b7 51       	subi	r27, 0x17	; 23
 46e:	b0 f0       	brcs	.+44     	; 0x49c <__fixunssfsi+0x3e>
 470:	e1 f0       	breq	.+56     	; 0x4aa <__fixunssfsi+0x4c>
 472:	66 0f       	add	r22, r22
 474:	77 1f       	adc	r23, r23
 476:	88 1f       	adc	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	1a f0       	brmi	.+6      	; 0x482 <__fixunssfsi+0x24>
 47c:	ba 95       	dec	r27
 47e:	c9 f7       	brne	.-14     	; 0x472 <__fixunssfsi+0x14>
 480:	14 c0       	rjmp	.+40     	; 0x4aa <__fixunssfsi+0x4c>
 482:	b1 30       	cpi	r27, 0x01	; 1
 484:	91 f0       	breq	.+36     	; 0x4aa <__fixunssfsi+0x4c>
 486:	0e 94 cc 02 	call	0x598	; 0x598 <__fp_zero>
 48a:	b1 e0       	ldi	r27, 0x01	; 1
 48c:	08 95       	ret
 48e:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_zero>
 492:	67 2f       	mov	r22, r23
 494:	78 2f       	mov	r23, r24
 496:	88 27       	eor	r24, r24
 498:	b8 5f       	subi	r27, 0xF8	; 248
 49a:	39 f0       	breq	.+14     	; 0x4aa <__fixunssfsi+0x4c>
 49c:	b9 3f       	cpi	r27, 0xF9	; 249
 49e:	cc f3       	brlt	.-14     	; 0x492 <__fixunssfsi+0x34>
 4a0:	86 95       	lsr	r24
 4a2:	77 95       	ror	r23
 4a4:	67 95       	ror	r22
 4a6:	b3 95       	inc	r27
 4a8:	d9 f7       	brne	.-10     	; 0x4a0 <__fixunssfsi+0x42>
 4aa:	3e f4       	brtc	.+14     	; 0x4ba <__fixunssfsi+0x5c>
 4ac:	90 95       	com	r25
 4ae:	80 95       	com	r24
 4b0:	70 95       	com	r23
 4b2:	61 95       	neg	r22
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	8f 4f       	sbci	r24, 0xFF	; 255
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	08 95       	ret

000004bc <__fp_cmp>:
 4bc:	99 0f       	add	r25, r25
 4be:	00 08       	sbc	r0, r0
 4c0:	55 0f       	add	r21, r21
 4c2:	aa 0b       	sbc	r26, r26
 4c4:	e0 e8       	ldi	r30, 0x80	; 128
 4c6:	fe ef       	ldi	r31, 0xFE	; 254
 4c8:	16 16       	cp	r1, r22
 4ca:	17 06       	cpc	r1, r23
 4cc:	e8 07       	cpc	r30, r24
 4ce:	f9 07       	cpc	r31, r25
 4d0:	c0 f0       	brcs	.+48     	; 0x502 <__stack+0x3>
 4d2:	12 16       	cp	r1, r18
 4d4:	13 06       	cpc	r1, r19
 4d6:	e4 07       	cpc	r30, r20
 4d8:	f5 07       	cpc	r31, r21
 4da:	98 f0       	brcs	.+38     	; 0x502 <__stack+0x3>
 4dc:	62 1b       	sub	r22, r18
 4de:	73 0b       	sbc	r23, r19
 4e0:	84 0b       	sbc	r24, r20
 4e2:	95 0b       	sbc	r25, r21
 4e4:	39 f4       	brne	.+14     	; 0x4f4 <__fp_cmp+0x38>
 4e6:	0a 26       	eor	r0, r26
 4e8:	61 f0       	breq	.+24     	; 0x502 <__stack+0x3>
 4ea:	23 2b       	or	r18, r19
 4ec:	24 2b       	or	r18, r20
 4ee:	25 2b       	or	r18, r21
 4f0:	21 f4       	brne	.+8      	; 0x4fa <__fp_cmp+0x3e>
 4f2:	08 95       	ret
 4f4:	0a 26       	eor	r0, r26
 4f6:	09 f4       	brne	.+2      	; 0x4fa <__fp_cmp+0x3e>
 4f8:	a1 40       	sbci	r26, 0x01	; 1
 4fa:	a6 95       	lsr	r26
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	81 1d       	adc	r24, r1
 500:	81 1d       	adc	r24, r1
 502:	08 95       	ret

00000504 <__fp_inf>:
 504:	97 f9       	bld	r25, 7
 506:	9f 67       	ori	r25, 0x7F	; 127
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	08 95       	ret

00000510 <__fp_nan>:
 510:	9f ef       	ldi	r25, 0xFF	; 255
 512:	80 ec       	ldi	r24, 0xC0	; 192
 514:	08 95       	ret

00000516 <__fp_pscA>:
 516:	00 24       	eor	r0, r0
 518:	0a 94       	dec	r0
 51a:	16 16       	cp	r1, r22
 51c:	17 06       	cpc	r1, r23
 51e:	18 06       	cpc	r1, r24
 520:	09 06       	cpc	r0, r25
 522:	08 95       	ret

00000524 <__fp_pscB>:
 524:	00 24       	eor	r0, r0
 526:	0a 94       	dec	r0
 528:	12 16       	cp	r1, r18
 52a:	13 06       	cpc	r1, r19
 52c:	14 06       	cpc	r1, r20
 52e:	05 06       	cpc	r0, r21
 530:	08 95       	ret

00000532 <__fp_round>:
 532:	09 2e       	mov	r0, r25
 534:	03 94       	inc	r0
 536:	00 0c       	add	r0, r0
 538:	11 f4       	brne	.+4      	; 0x53e <__fp_round+0xc>
 53a:	88 23       	and	r24, r24
 53c:	52 f0       	brmi	.+20     	; 0x552 <__fp_round+0x20>
 53e:	bb 0f       	add	r27, r27
 540:	40 f4       	brcc	.+16     	; 0x552 <__fp_round+0x20>
 542:	bf 2b       	or	r27, r31
 544:	11 f4       	brne	.+4      	; 0x54a <__fp_round+0x18>
 546:	60 ff       	sbrs	r22, 0
 548:	04 c0       	rjmp	.+8      	; 0x552 <__fp_round+0x20>
 54a:	6f 5f       	subi	r22, 0xFF	; 255
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	08 95       	ret

00000554 <__fp_split3>:
 554:	57 fd       	sbrc	r21, 7
 556:	90 58       	subi	r25, 0x80	; 128
 558:	44 0f       	add	r20, r20
 55a:	55 1f       	adc	r21, r21
 55c:	59 f0       	breq	.+22     	; 0x574 <__fp_splitA+0x10>
 55e:	5f 3f       	cpi	r21, 0xFF	; 255
 560:	71 f0       	breq	.+28     	; 0x57e <__fp_splitA+0x1a>
 562:	47 95       	ror	r20

00000564 <__fp_splitA>:
 564:	88 0f       	add	r24, r24
 566:	97 fb       	bst	r25, 7
 568:	99 1f       	adc	r25, r25
 56a:	61 f0       	breq	.+24     	; 0x584 <__fp_splitA+0x20>
 56c:	9f 3f       	cpi	r25, 0xFF	; 255
 56e:	79 f0       	breq	.+30     	; 0x58e <__fp_splitA+0x2a>
 570:	87 95       	ror	r24
 572:	08 95       	ret
 574:	12 16       	cp	r1, r18
 576:	13 06       	cpc	r1, r19
 578:	14 06       	cpc	r1, r20
 57a:	55 1f       	adc	r21, r21
 57c:	f2 cf       	rjmp	.-28     	; 0x562 <__fp_split3+0xe>
 57e:	46 95       	lsr	r20
 580:	f1 df       	rcall	.-30     	; 0x564 <__fp_splitA>
 582:	08 c0       	rjmp	.+16     	; 0x594 <__fp_splitA+0x30>
 584:	16 16       	cp	r1, r22
 586:	17 06       	cpc	r1, r23
 588:	18 06       	cpc	r1, r24
 58a:	99 1f       	adc	r25, r25
 58c:	f1 cf       	rjmp	.-30     	; 0x570 <__fp_splitA+0xc>
 58e:	86 95       	lsr	r24
 590:	71 05       	cpc	r23, r1
 592:	61 05       	cpc	r22, r1
 594:	08 94       	sec
 596:	08 95       	ret

00000598 <__fp_zero>:
 598:	e8 94       	clt

0000059a <__fp_szero>:
 59a:	bb 27       	eor	r27, r27
 59c:	66 27       	eor	r22, r22
 59e:	77 27       	eor	r23, r23
 5a0:	cb 01       	movw	r24, r22
 5a2:	97 f9       	bld	r25, 7
 5a4:	08 95       	ret

000005a6 <__gesf2>:
 5a6:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__fp_cmp>
 5aa:	08 f4       	brcc	.+2      	; 0x5ae <__gesf2+0x8>
 5ac:	8f ef       	ldi	r24, 0xFF	; 255
 5ae:	08 95       	ret

000005b0 <__mulsf3>:
 5b0:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__mulsf3x>
 5b4:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_round>
 5b8:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscA>
 5bc:	38 f0       	brcs	.+14     	; 0x5cc <__mulsf3+0x1c>
 5be:	0e 94 92 02 	call	0x524	; 0x524 <__fp_pscB>
 5c2:	20 f0       	brcs	.+8      	; 0x5cc <__mulsf3+0x1c>
 5c4:	95 23       	and	r25, r21
 5c6:	11 f0       	breq	.+4      	; 0x5cc <__mulsf3+0x1c>
 5c8:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 5cc:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_nan>
 5d0:	11 24       	eor	r1, r1
 5d2:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_szero>

000005d6 <__mulsf3x>:
 5d6:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_split3>
 5da:	70 f3       	brcs	.-36     	; 0x5b8 <__mulsf3+0x8>

000005dc <__mulsf3_pse>:
 5dc:	95 9f       	mul	r25, r21
 5de:	c1 f3       	breq	.-16     	; 0x5d0 <__mulsf3+0x20>
 5e0:	95 0f       	add	r25, r21
 5e2:	50 e0       	ldi	r21, 0x00	; 0
 5e4:	55 1f       	adc	r21, r21
 5e6:	62 9f       	mul	r22, r18
 5e8:	f0 01       	movw	r30, r0
 5ea:	72 9f       	mul	r23, r18
 5ec:	bb 27       	eor	r27, r27
 5ee:	f0 0d       	add	r31, r0
 5f0:	b1 1d       	adc	r27, r1
 5f2:	63 9f       	mul	r22, r19
 5f4:	aa 27       	eor	r26, r26
 5f6:	f0 0d       	add	r31, r0
 5f8:	b1 1d       	adc	r27, r1
 5fa:	aa 1f       	adc	r26, r26
 5fc:	64 9f       	mul	r22, r20
 5fe:	66 27       	eor	r22, r22
 600:	b0 0d       	add	r27, r0
 602:	a1 1d       	adc	r26, r1
 604:	66 1f       	adc	r22, r22
 606:	82 9f       	mul	r24, r18
 608:	22 27       	eor	r18, r18
 60a:	b0 0d       	add	r27, r0
 60c:	a1 1d       	adc	r26, r1
 60e:	62 1f       	adc	r22, r18
 610:	73 9f       	mul	r23, r19
 612:	b0 0d       	add	r27, r0
 614:	a1 1d       	adc	r26, r1
 616:	62 1f       	adc	r22, r18
 618:	83 9f       	mul	r24, r19
 61a:	a0 0d       	add	r26, r0
 61c:	61 1d       	adc	r22, r1
 61e:	22 1f       	adc	r18, r18
 620:	74 9f       	mul	r23, r20
 622:	33 27       	eor	r19, r19
 624:	a0 0d       	add	r26, r0
 626:	61 1d       	adc	r22, r1
 628:	23 1f       	adc	r18, r19
 62a:	84 9f       	mul	r24, r20
 62c:	60 0d       	add	r22, r0
 62e:	21 1d       	adc	r18, r1
 630:	82 2f       	mov	r24, r18
 632:	76 2f       	mov	r23, r22
 634:	6a 2f       	mov	r22, r26
 636:	11 24       	eor	r1, r1
 638:	9f 57       	subi	r25, 0x7F	; 127
 63a:	50 40       	sbci	r21, 0x00	; 0
 63c:	9a f0       	brmi	.+38     	; 0x664 <__mulsf3_pse+0x88>
 63e:	f1 f0       	breq	.+60     	; 0x67c <__mulsf3_pse+0xa0>
 640:	88 23       	and	r24, r24
 642:	4a f0       	brmi	.+18     	; 0x656 <__mulsf3_pse+0x7a>
 644:	ee 0f       	add	r30, r30
 646:	ff 1f       	adc	r31, r31
 648:	bb 1f       	adc	r27, r27
 64a:	66 1f       	adc	r22, r22
 64c:	77 1f       	adc	r23, r23
 64e:	88 1f       	adc	r24, r24
 650:	91 50       	subi	r25, 0x01	; 1
 652:	50 40       	sbci	r21, 0x00	; 0
 654:	a9 f7       	brne	.-22     	; 0x640 <__mulsf3_pse+0x64>
 656:	9e 3f       	cpi	r25, 0xFE	; 254
 658:	51 05       	cpc	r21, r1
 65a:	80 f0       	brcs	.+32     	; 0x67c <__mulsf3_pse+0xa0>
 65c:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>
 660:	0c 94 cd 02 	jmp	0x59a	; 0x59a <__fp_szero>
 664:	5f 3f       	cpi	r21, 0xFF	; 255
 666:	e4 f3       	brlt	.-8      	; 0x660 <__mulsf3_pse+0x84>
 668:	98 3e       	cpi	r25, 0xE8	; 232
 66a:	d4 f3       	brlt	.-12     	; 0x660 <__mulsf3_pse+0x84>
 66c:	86 95       	lsr	r24
 66e:	77 95       	ror	r23
 670:	67 95       	ror	r22
 672:	b7 95       	ror	r27
 674:	f7 95       	ror	r31
 676:	e7 95       	ror	r30
 678:	9f 5f       	subi	r25, 0xFF	; 255
 67a:	c1 f7       	brne	.-16     	; 0x66c <__mulsf3_pse+0x90>
 67c:	fe 2b       	or	r31, r30
 67e:	88 0f       	add	r24, r24
 680:	91 1d       	adc	r25, r1
 682:	96 95       	lsr	r25
 684:	87 95       	ror	r24
 686:	97 f9       	bld	r25, 7
 688:	08 95       	ret

0000068a <_exit>:
 68a:	f8 94       	cli

0000068c <__stop_program>:
 68c:	ff cf       	rjmp	.-2      	; 0x68c <__stop_program>
